<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>android on Xizhi's Blog</title><link>https://xizzhu.me/tags/android/</link><description>Recent content in android on Xizhi's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Jun 2021 00:00:00 -0500</lastBuildDate><atom:link href="https://xizzhu.me/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Model-View-Intent Design Pattern on Android</title><link>https://xizzhu.me/post/2021-06-21-android-mvi-kotlin-coroutines-flow-compose/</link><pubDate>Mon, 21 Jun 2021 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2021-06-21-android-mvi-kotlin-coroutines-flow-compose/</guid><description>&lt;p>Model-View-Intent (MVI) is one of the latest design patterns for Android, which relies heavily on reactive and &lt;a href="https://xizzhu.me/post/2021-02-17-programming-paradigms-structured-object-oriented-functional/">functional programming&lt;/a>.&lt;/p></description></item><item><title>Dependency Injection with Hilt</title><link>https://xizzhu.me/post/2020-07-25-dependency-injection-hilt/</link><pubDate>Sat, 25 Jul 2020 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2020-07-25-dependency-injection-hilt/</guid><description>&lt;p>&lt;a href="https://dagger.dev/hilt/">Hilt&lt;/a> is a new Dagger-based library for Android apps, providing an easy way to incorporate dependency injection with less boilerplate code. In this article, we&amp;rsquo;ll discuss how to use it.&lt;/p></description></item><item><title>Different ways Activities communicating with Services on Android</title><link>https://xizzhu.me/post/2020-05-18-android-activity-service-communication/</link><pubDate>Mon, 18 May 2020 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2020-05-18-android-activity-service-communication/</guid><description>&lt;p>In this article, we present different ways &lt;a href="https://developer.android.com/reference/android/app/Activity">Activities&lt;/a> could use to communicate with &lt;a href="https://developer.android.com/reference/android/app/Service">Services&lt;/a> on Android.&lt;/p></description></item><item><title>How Android apps get handles to system services</title><link>https://xizzhu.me/post/2020-05-14-android-getsystemservice/</link><pubDate>Thu, 14 May 2020 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2020-05-14-android-getsystemservice/</guid><description>&lt;p>We all have used &lt;a href="https://developer.android.com/reference/android/content/Context#getSystemService(java.lang.String)">Context.getSystemService()&lt;/a> to get a handle to a system service. But have you ever wondered how it works behind the scene? In this article, we&amp;rsquo;ll dig into the code and try to find out.&lt;/p></description></item><item><title>Loopers and Handlers in Android</title><link>https://xizzhu.me/post/2020-05-09-android-looper-handler/</link><pubDate>Sat, 09 May 2020 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2020-05-09-android-looper-handler/</guid><description>&lt;p>&lt;code>Looper&lt;/code> and &lt;code>Handler&lt;/code> are one of the key low-level components of Android. For example, the UI thread is built with them. However, only a few developers use them directly nowadays. In this article, we&amp;rsquo;ll try to understand how they work.&lt;/p></description></item><item><title>What You Should Know About SharedPreferences</title><link>https://xizzhu.me/post/2019-02-21-shared-preferences-android/</link><pubDate>Thu, 21 Feb 2019 00:00:00 -0600</pubDate><guid>https://xizzhu.me/post/2019-02-21-shared-preferences-android/</guid><description>&lt;p>&lt;a href="https://developer.android.com/reference/android/content/SharedPreferences.html">Shared preference&lt;/a> is a built-in key-value store for primitive data types. It’s very easy to use, but there are some hidden mines that you may want to know.&lt;/p></description></item><item><title>Create Chooser Intent with Packages Excluded</title><link>https://xizzhu.me/post/2016-01-14-chooser-intent-exclude-package/</link><pubDate>Thu, 14 Jan 2016 00:00:00 -0600</pubDate><guid>https://xizzhu.me/post/2016-01-14-chooser-intent-exclude-package/</guid><description>&lt;p>It&amp;rsquo;s extremely easy to &lt;a href="http://android-developers.blogspot.com/2012/02/share-with-intents.html">share with Intent on Android&lt;/a>. However, there are some apps that capture the &lt;code>ACTION_SEND&lt;/code> intents, but &lt;a href="https://developers.facebook.com/bugs/332619626816423">doesn&amp;rsquo;t allow&lt;/a> the app to pre-fill text set with &lt;code>EXTRA_TEXT&lt;/code>, resulting in poor user experience.&lt;/p></description></item><item><title>BLE on Android</title><link>https://xizzhu.me/post/2015-06-02-android-ble-bluetooth/</link><pubDate>Tue, 02 Jun 2015 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2015-06-02-android-ble-bluetooth/</guid><description>&lt;p>Android supported &lt;a href="http://www.bluetooth.com/Pages/Bluetooth-Smart.aspx">Bluetooth Low Energy / Bluetooth Smart&lt;/a> since &lt;a href="https://developer.android.com/about/versions/android-4.3.html#Wireless">4.3 / API level 18&lt;/a>. However, it’s not nice, in many ways.&lt;/p></description></item><item><title>Play with Google Play Services - Android Wear</title><link>https://xizzhu.me/post/2015-04-20-google-play-services-android-wear/</link><pubDate>Mon, 20 Apr 2015 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2015-04-20-google-play-services-android-wear/</guid><description>&lt;p>If you haven’t set up Google Play services yet, please follow &lt;a href="https://xizzhu.me/post/2014-02-07-google-play-services-set-up">this tutorial&lt;/a>. Today we demonstrate how to use Android Wear on devices with Android 4.3 or higher and BLE support.&lt;/p></description></item><item><title>Play with Google Play Services - Locations</title><link>https://xizzhu.me/post/2014-11-10-google-play-services-locations/</link><pubDate>Mon, 10 Nov 2014 00:00:00 -0600</pubDate><guid>https://xizzhu.me/post/2014-11-10-google-play-services-locations/</guid><description>&lt;p>If you haven’t set up Google Play services yet, please follow &lt;a href="https://xizzhu.me/post/2014-02-07-google-play-services-set-up">this tutorial&lt;/a>.&lt;/p></description></item><item><title>Play with Google Play Services - Push Notification</title><link>https://xizzhu.me/post/2014-02-26-google-play-services-push-notification-cloud-messaging/</link><pubDate>Wed, 26 Feb 2014 00:00:00 -0600</pubDate><guid>https://xizzhu.me/post/2014-02-26-google-play-services-push-notification-cloud-messaging/</guid><description>&lt;p>If you haven’t set up Google Play services yet, please follow &lt;a href="https://xizzhu.me/post/2014-02-07-google-play-services-set-up">this tutorial&lt;/a>. Today, we demonstrate how to use the cloud messaging / push notification.&lt;/p></description></item><item><title>Play with Google Play Services - Map</title><link>https://xizzhu.me/post/2014-02-10-google-play-services-map/</link><pubDate>Mon, 10 Feb 2014 00:00:00 -0600</pubDate><guid>https://xizzhu.me/post/2014-02-10-google-play-services-map/</guid><description>&lt;p>If you haven’t set up Google Play services yet, please follow &lt;a href="https://xizzhu.me/post/2014-02-07-google-play-services-set-up">this tutorial&lt;/a>.&lt;/p></description></item><item><title>Play with Google Play Services - Set Up</title><link>https://xizzhu.me/post/2014-02-07-google-play-services-set-up/</link><pubDate>Fri, 07 Feb 2014 00:00:00 -0600</pubDate><guid>https://xizzhu.me/post/2014-02-07-google-play-services-set-up/</guid><description>&lt;p>Google has offered a bunch of services that developers can use in their Android apps. In this and following few blog posts, we demonstrate how easy it is to use them. Now, let&amp;rsquo;s get everything setup.&lt;/p></description></item><item><title>Displaying Images Efficiently on Android</title><link>https://xizzhu.me/post/2013-09-09-display-image-efficiently-android/</link><pubDate>Mon, 09 Sep 2013 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2013-09-09-display-image-efficiently-android/</guid><description>&lt;p>In this blog post, we demonstrate some simple ways to efficiently display images.&lt;/p></description></item></channel></rss>