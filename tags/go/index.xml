<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on Xizhi Zhu</title><link>https://xizzhu.me/tags/go/</link><description>Recent content in go on Xizhi Zhu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Oct 2013 00:00:00 -0700</lastBuildDate><atom:link href="https://xizzhu.me/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Goâ€™s defer statement in C++</title><link>https://xizzhu.me/post/2013-10-14-go-defer-statement-c/</link><pubDate>Mon, 14 Oct 2013 00:00:00 -0700</pubDate><guid>https://xizzhu.me/post/2013-10-14-go-defer-statement-c/</guid><description>&lt;p>The Go language provides a useful &lt;a href="http://blog.golang.org/defer-panic-and-recover">defer statement&lt;/a> to guarantee certain code is always executed when returning from the current scope. Though we can use constructor in C++, things get tricky e.g. when a pointer needs to be deleted. Here we present some simple draft code to solve this issue.&lt;/p></description></item></channel></rss>