<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>xizzhu</title><link>https://xizzhu.me/</link><description>Recent content on xizzhu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 12 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://xizzhu.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Build own Smart Home system, Part 1</title><link>https://xizzhu.me/post/2023-09-12-esp32-arduino-dht/</link><pubDate>Tue, 12 Sep 2023 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2023-09-12-esp32-arduino-dht/</guid><description>&lt;p>To help my kids learn programming, we decided to build our own Smart Home system. This is Part 1 of the series, setting up the development environment and getting the room temperature.&lt;/p></description></item><item><title>Cancelling coroutines is easy, right?</title><link>https://xizzhu.me/post/2023-05-02-kotlin-coroutine-cancellation-exception-suspend/</link><pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2023-05-02-kotlin-coroutine-cancellation-exception-suspend/</guid><description>&lt;p>With a well-designed support for &lt;a href="https://xizzhu.me/post/2019-05-24-kotlin-coroutine-structured-concurrency/">structured concurrency&lt;/a>, cancelling should be easy, and calling &lt;code>job.cancel()&lt;/code> will do the trick, right?&lt;/p></description></item><item><title>Get notified when bound client is dead</title><link>https://xizzhu.me/post/2022-02-15-android-remote-service-client-dead-binder/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2022-02-15-android-remote-service-client-dead-binder/</guid><description>&lt;p>In Android, a client can &lt;a href="https://xizzhu.me/post/2020-05-18-android-activity-service-communication/">bind&lt;/a> to a &lt;code>Service&lt;/code> running in a different process and even a different APK, but how could the bound service know the remote client is killed by the system and release the resources?&lt;/p></description></item><item><title>New York Times: Asians 'vividly overrepresented'</title><link>https://xizzhu.me/post/2022-02-10-new-york-times-asians-vividly-overrepresented/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2022-02-10-new-york-times-asians-vividly-overrepresented/</guid><description>&lt;p>Asian Americans are doing a fantastic job in the Winter Olympics. But instead of celebrating the success, New York Times decided to launch a new round of racial attacks.&lt;/p></description></item><item><title>New Bluetooth permissions in Android 12</title><link>https://xizzhu.me/post/2021-10-05-android-12-bluetooth-permissions/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2021-10-05-android-12-bluetooth-permissions/</guid><description>&lt;p>In this article, I will discuss the new &lt;a href="https://developer.android.com/guide/topics/connectivity/bluetooth/permissions#declare-android12-or-higher">Bluetooth permissions&lt;/a> introduced in &lt;a href="https://developer.android.com/about/versions/12">Android 12&lt;/a>.&lt;/p></description></item><item><title>Understanding BLE throughput on Android</title><link>https://xizzhu.me/post/2021-08-06-android-ble-throughput/</link><pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2021-08-06-android-ble-throughput/</guid><description>&lt;p>We have been told that the BLE can reach a throughput of 1 Mbps (or 2 Mbps with Bluetooth 5.0). But why do we always feel it&amp;rsquo;s extremely slow in practice? In this article, I will try to explain this, and how to improve throughput on Android.&lt;/p></description></item><item><title>Getting started with Kotlin Multiplaform Mobile (KMM)</title><link>https://xizzhu.me/post/2021-06-28-kotlin-multiplatform-mobile-kmm/</link><pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2021-06-28-kotlin-multiplatform-mobile-kmm/</guid><description>&lt;p>&lt;a href="https://kotlinlang.org/docs/mobile/home.html">Kotlin Multiplatform Mobile (KMM)&lt;/a> is a cross-platform framework to share code for Android and iOS apps.&lt;/p></description></item><item><title>Model-View-Intent Design Pattern on Android</title><link>https://xizzhu.me/post/2021-06-21-android-mvi-kotlin-coroutines-flow-compose/</link><pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2021-06-21-android-mvi-kotlin-coroutines-flow-compose/</guid><description>&lt;p>Model-View-Intent (MVI) is one of the latest design patterns for Android, which relies heavily on reactive and &lt;a href="https://xizzhu.me/post/2021-02-17-programming-paradigms-structured-object-oriented-functional/">functional programming&lt;/a>.&lt;/p></description></item><item><title>All Democratic Senators voted for racial discrimination against Asians in higher education</title><link>https://xizzhu.me/post/2021-04-22-democrat-senator-anti-asian-hate/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2021-04-22-democrat-senator-anti-asian-hate/</guid><description>&lt;p>Yes, you read it right: today, all Democratic Senators voted to allow racial discrimination against Asians in higher education. And yes, all Republican Senators voted against the discrimination.&lt;/p></description></item><item><title>Three Programming Paradigms</title><link>https://xizzhu.me/post/2021-02-17-programming-paradigms-structured-object-oriented-functional/</link><pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2021-02-17-programming-paradigms-structured-object-oriented-functional/</guid><description>&lt;p>In this article, we talk briefly about the three programming paradigms that are widely used: structured programming, object-oriented programming, and functional programming.&lt;/p></description></item><item><title>How US Respond to Coronavirus in Early Days</title><link>https://xizzhu.me/post/2020-09-30-us-coronavirus-response/</link><pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-09-30-us-coronavirus-response/</guid><description>&lt;p>Here is the timeline on how US responded to Coronavirus from middle January to end of March.&lt;/p></description></item><item><title>Dependency Injection with Hilt</title><link>https://xizzhu.me/post/2020-07-25-dependency-injection-hilt/</link><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-07-25-dependency-injection-hilt/</guid><description>&lt;p>&lt;a href="https://dagger.dev/hilt/">Hilt&lt;/a> is a new Dagger-based library for Android apps, providing an easy way to incorporate dependency injection with less boilerplate code. In this article, we&amp;rsquo;ll discuss how to use it.&lt;/p></description></item><item><title>Understanding Generics in Kotlin</title><link>https://xizzhu.me/post/2020-06-06-kotlin-generics/</link><pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-06-06-kotlin-generics/</guid><description>&lt;p>&lt;a href="https://kotlinlang.org/docs/reference/generics.html">Generics&lt;/a> is a powerful tool, but it often seems confusing. In this article, we&amp;rsquo;ll try to explain how to use it in Kotlin.&lt;/p></description></item><item><title>Different ways Activities communicating with Services on Android</title><link>https://xizzhu.me/post/2020-05-18-android-activity-service-communication/</link><pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-05-18-android-activity-service-communication/</guid><description>&lt;p>In this article, we present different ways &lt;a href="https://developer.android.com/reference/android/app/Activity">Activities&lt;/a> could use to communicate with &lt;a href="https://developer.android.com/reference/android/app/Service">Services&lt;/a> on Android.&lt;/p></description></item><item><title>How Android apps get handles to system services</title><link>https://xizzhu.me/post/2020-05-14-android-getsystemservice/</link><pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-05-14-android-getsystemservice/</guid><description>&lt;p>We all have used &lt;a href="https://developer.android.com/reference/android/content/Context#getSystemService(java.lang.String)">Context.getSystemService()&lt;/a> to get a handle to a system service. But have you ever wondered how it works behind the scene? In this article, we&amp;rsquo;ll dig into the code and try to find out.&lt;/p></description></item><item><title>Loopers and Handlers in Android</title><link>https://xizzhu.me/post/2020-05-09-android-looper-handler/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-05-09-android-looper-handler/</guid><description>&lt;p>&lt;code>Looper&lt;/code> and &lt;code>Handler&lt;/code> are one of the key low-level components of Android. For example, the UI thread is built with them. However, only a few developers use them directly nowadays. In this article, we&amp;rsquo;ll try to understand how they work.&lt;/p></description></item><item><title>Design Patterns in Kotlin: Behavioral Patterns</title><link>https://xizzhu.me/post/2020-05-02-design-patterns-kotlin-behavioral-patterns/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-05-02-design-patterns-kotlin-behavioral-patterns/</guid><description>&lt;p>Gang of Four&amp;rsquo;s Behavioral Patterns describe the way of &lt;strong>communications between objects&lt;/strong>.&lt;/p></description></item><item><title>Design Patterns in Kotlin: Structural Patterns</title><link>https://xizzhu.me/post/2020-04-27-design-patterns-kotlin-structural-patterns/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-27-design-patterns-kotlin-structural-patterns/</guid><description>&lt;p>Gang of Four&amp;rsquo;s Structural Patterns describe the way of &lt;strong>composing classes and objects to form larger structures&lt;/strong>.&lt;/p></description></item><item><title>Design Patterns in Kotlin: Creational Patterns</title><link>https://xizzhu.me/post/2020-04-25-design-patterns-kotlin-creational-patterns/</link><pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-25-design-patterns-kotlin-creational-patterns/</guid><description>&lt;p>Gang of Four&amp;rsquo;s Creational Patterns describe the way of &lt;strong>creating and initializing objects&lt;/strong>.&lt;/p></description></item><item><title>Effective Kotlin: Serialization</title><link>https://xizzhu.me/post/2020-04-24-effective-kotlin-serialization/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-24-effective-kotlin-serialization/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Serialization.&lt;/p></description></item><item><title>Effective Kotlin: Concurrency</title><link>https://xizzhu.me/post/2020-04-23-effective-kotlin-concurrency/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-23-effective-kotlin-concurrency/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Concurrency.&lt;/p></description></item><item><title>Effective Kotlin: Exceptions</title><link>https://xizzhu.me/post/2020-04-22-effective-kotlin-exceptions/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-22-effective-kotlin-exceptions/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Exceptions.&lt;/p></description></item><item><title>Effective Kotlin: General Programming</title><link>https://xizzhu.me/post/2020-04-20-effective-kotlin-general-programming/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-20-effective-kotlin-general-programming/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is General Programming.&lt;/p></description></item><item><title>Effective Kotlin: Methods</title><link>https://xizzhu.me/post/2020-04-16-effective-kotlin-methods/</link><pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-16-effective-kotlin-methods/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Methods.&lt;/p></description></item><item><title>Effective Kotlin: Lambdas and Streams</title><link>https://xizzhu.me/post/2020-04-15-effective-kotlin-lambdas-streams/</link><pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-15-effective-kotlin-lambdas-streams/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Lambdas and Streams.&lt;/p></description></item><item><title>Effective Kotlin: Enums and Annotations</title><link>https://xizzhu.me/post/2020-04-13-effective-kotlin-enums-annotations/</link><pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-13-effective-kotlin-enums-annotations/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Enums and Annotations.&lt;/p></description></item><item><title>Effective Kotlin: Generics</title><link>https://xizzhu.me/post/2020-04-10-effective-kotlin-generics/</link><pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-10-effective-kotlin-generics/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Generics.&lt;/p></description></item><item><title>Effective Kotlin: Classes and Interfaces</title><link>https://xizzhu.me/post/2020-04-07-effective-kotlin-classes-interfaces/</link><pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-07-effective-kotlin-classes-interfaces/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Classes and Interfaces.&lt;/p></description></item><item><title>Effective Kotlin: Methods Common to All Objects</title><link>https://xizzhu.me/post/2020-04-05-effective-kotlin-methods-common-all-objects/</link><pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-05-effective-kotlin-methods-common-all-objects/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world. Today&amp;rsquo;s topic is Methods Common to All Objects.&lt;/p></description></item><item><title>Effective Kotlin: Creating and Destroying Objects</title><link>https://xizzhu.me/post/2020-04-03-effective-kotlin-create-destroy-object/</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2020-04-03-effective-kotlin-create-destroy-object/</guid><description>&lt;p>Let&amp;rsquo;s see how we can apply Joshua Bloch&amp;rsquo;s &lt;a href="https://www.amazon.com/gp/product/0134685997/">Effective Java&lt;/a> in the Kotlin world, starting with Creating and Destroying Objects.&lt;/p></description></item><item><title>Kotlin Coroutines: Flows</title><link>https://xizzhu.me/post/2019-12-09-kotlin-coroutine-flow/</link><pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2019-12-09-kotlin-coroutine-flow/</guid><description>&lt;p>&lt;a href="https://xizzhu.me/post/2019-05-23-kotlin-coroutine">Kotlin Coroutines&lt;/a> enables us to asynchronously return a single value, but how about multiple values?&lt;/p></description></item><item><title>Kotlin Coroutines: Structured Concurrency</title><link>https://xizzhu.me/post/2019-05-24-kotlin-coroutine-structured-concurrency/</link><pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2019-05-24-kotlin-coroutine-structured-concurrency/</guid><description>&lt;p>In the previous &lt;a href="https://xizzhu.me/post/2019-05-23-kotlin-coroutine">article&lt;/a>, we discussed the basics on how to Kotlin Coroutines. Now, let&amp;rsquo;s continue to the topic of &lt;strong>structured concurrency&lt;/strong>.&lt;/p></description></item><item><title>Kotlin Coroutines: The Basics</title><link>https://xizzhu.me/post/2019-05-23-kotlin-coroutine/</link><pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2019-05-23-kotlin-coroutine/</guid><description>&lt;p>Starting with the &lt;a href="https://kotlinlang.org/docs/reference/whatsnew13.html">1.3&lt;/a> release, Kotlin provides a nice and flexible way to do asynchronous or non-blocking programming: &lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html">Coroutines&lt;/a>.&lt;/p></description></item><item><title>Kotlin Standard Functions: apply, also, let, with, and run</title><link>https://xizzhu.me/post/2019-04-03-kotlin-standard-functions-let-apply-also-run-with/</link><pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2019-04-03-kotlin-standard-functions-let-apply-also-run-with/</guid><description>&lt;p>Kotlin has provided several powerful functions in &lt;a href="https://github.com/JetBrains/kotlin/blob/master/libraries/stdlib/src/kotlin/util/Standard.kt">Standard.kt&lt;/a>. Let&amp;rsquo;s go through them here quickly.&lt;/p></description></item><item><title>What You Should Know About SharedPreferences</title><link>https://xizzhu.me/post/2019-02-21-shared-preferences-android/</link><pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2019-02-21-shared-preferences-android/</guid><description>&lt;p>&lt;a href="https://developer.android.com/reference/android/content/SharedPreferences.html">Shared preference&lt;/a> is a built-in key-value store for primitive data types. It’s very easy to use, but there are some hidden mines that you may want to know.&lt;/p></description></item><item><title>Wrapping Existing Code With RxJava</title><link>https://xizzhu.me/post/2016-09-06-rxjava-wrapping/</link><pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2016-09-06-rxjava-wrapping/</guid><description>&lt;p>We are using &lt;a href="https://github.com/ReactiveX/RxJava">RxJava&lt;/a> in Android a lot, with good reasons. However, we still need to use code that is not built with RxJava, so let&amp;rsquo;s wrap them.&lt;/p></description></item><item><title>Create Chooser Intent with Packages Excluded</title><link>https://xizzhu.me/post/2016-01-14-chooser-intent-exclude-package/</link><pubDate>Thu, 14 Jan 2016 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2016-01-14-chooser-intent-exclude-package/</guid><description>&lt;p>It&amp;rsquo;s extremely easy to &lt;a href="http://android-developers.blogspot.com/2012/02/share-with-intents.html">share with Intent on Android&lt;/a>. However, there are some apps that capture the &lt;code>ACTION_SEND&lt;/code> intents, but &lt;a href="https://developers.facebook.com/bugs/332619626816423">doesn&amp;rsquo;t allow&lt;/a> the app to pre-fill text set with &lt;code>EXTRA_TEXT&lt;/code>, resulting in poor user experience.&lt;/p></description></item><item><title>Write Own Osmosis Plugin</title><link>https://xizzhu.me/post/2015-10-13-osm-osmosis-plugin/</link><pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2015-10-13-osm-osmosis-plugin/</guid><description>&lt;p>&lt;a href="http://wiki.openstreetmap.org/wiki/Osmosis">Osmosis&lt;/a> is a command line application for processing &lt;a href="http://www.openstreetmap.org">Open Street Map&lt;/a> data, with the souce code available &lt;a href="https://github.com/openstreetmap/osmosis">here&lt;/a>. The tool provides e.g. ability to generate and read data dumps, extract data inside a bounding box, etc. You can also easily write your own plugin to convert OSM data to e.g. formats your application understands.&lt;/p></description></item><item><title>BLE on Android</title><link>https://xizzhu.me/post/2015-06-02-android-ble-bluetooth/</link><pubDate>Tue, 02 Jun 2015 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2015-06-02-android-ble-bluetooth/</guid><description>&lt;p>Android supported &lt;a href="http://www.bluetooth.com/Pages/Bluetooth-Smart.aspx">Bluetooth Low Energy / Bluetooth Smart&lt;/a> since &lt;a href="https://developer.android.com/about/versions/android-4.3.html#Wireless">4.3 / API level 18&lt;/a>. However, it’s not nice, in many ways.&lt;/p></description></item><item><title>Play with Google Play Services - Android Wear</title><link>https://xizzhu.me/post/2015-04-20-google-play-services-android-wear/</link><pubDate>Mon, 20 Apr 2015 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2015-04-20-google-play-services-android-wear/</guid><description>&lt;p>If you haven’t set up Google Play services yet, please follow &lt;a href="https://xizzhu.me/post/2014-02-07-google-play-services-set-up">this tutorial&lt;/a>. Today we demonstrate how to use Android Wear on devices with Android 4.3 or higher and BLE support.&lt;/p></description></item><item><title>Play with Google Play Services - Locations</title><link>https://xizzhu.me/post/2014-11-10-google-play-services-locations/</link><pubDate>Mon, 10 Nov 2014 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2014-11-10-google-play-services-locations/</guid><description>&lt;p>If you haven’t set up Google Play services yet, please follow &lt;a href="https://xizzhu.me/post/2014-02-07-google-play-services-set-up">this tutorial&lt;/a>.&lt;/p></description></item><item><title>Play with Google Play Services - Push Notification</title><link>https://xizzhu.me/post/2014-02-26-google-play-services-push-notification-cloud-messaging/</link><pubDate>Wed, 26 Feb 2014 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2014-02-26-google-play-services-push-notification-cloud-messaging/</guid><description>&lt;p>If you haven’t set up Google Play services yet, please follow &lt;a href="https://xizzhu.me/post/2014-02-07-google-play-services-set-up">this tutorial&lt;/a>. Today, we demonstrate how to use the cloud messaging / push notification.&lt;/p></description></item><item><title>Play with Google Play Services - Map</title><link>https://xizzhu.me/post/2014-02-10-google-play-services-map/</link><pubDate>Mon, 10 Feb 2014 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2014-02-10-google-play-services-map/</guid><description>&lt;p>If you haven’t set up Google Play services yet, please follow &lt;a href="https://xizzhu.me/post/2014-02-07-google-play-services-set-up">this tutorial&lt;/a>.&lt;/p></description></item><item><title>Play with Google Play Services - Set Up</title><link>https://xizzhu.me/post/2014-02-07-google-play-services-set-up/</link><pubDate>Fri, 07 Feb 2014 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2014-02-07-google-play-services-set-up/</guid><description>&lt;p>Google has offered a bunch of services that developers can use in their Android apps. In this and following few blog posts, we demonstrate how easy it is to use them. Now, let&amp;rsquo;s get everything setup.&lt;/p></description></item><item><title>Go’s defer statement in C++</title><link>https://xizzhu.me/post/2013-10-14-go-defer-statement-c/</link><pubDate>Mon, 14 Oct 2013 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2013-10-14-go-defer-statement-c/</guid><description>&lt;p>The Go language provides a useful &lt;a href="http://blog.golang.org/defer-panic-and-recover">defer statement&lt;/a> to guarantee certain code is always executed when returning from the current scope. Though we can use constructor in C++, things get tricky e.g. when a pointer needs to be deleted. Here we present some simple draft code to solve this issue.&lt;/p></description></item><item><title>Displaying Images Efficiently on Android</title><link>https://xizzhu.me/post/2013-09-09-display-image-efficiently-android/</link><pubDate>Mon, 09 Sep 2013 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2013-09-09-display-image-efficiently-android/</guid><description>&lt;p>In this blog post, we demonstrate some simple ways to efficiently display images.&lt;/p></description></item><item><title>D-Pointer / Private Implementation in Qt</title><link>https://xizzhu.me/post/2010-11-25-qt-private-impl/</link><pubDate>Thu, 25 Nov 2010 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2010-11-25-qt-private-impl/</guid><description>&lt;p>I believe many of you who just start reading the source code of Qt will have the question: why Qt uses those private classes? What&amp;rsquo;s the benefit of such a design pattern? Well, the most significant reason is to &lt;strong>keep the binary compatibility&lt;/strong>.&lt;/p></description></item><item><title>Hybrid Application Using QML and Qt C++</title><link>https://xizzhu.me/post/2010-10-28-hybrid-qml-qt/</link><pubDate>Thu, 28 Oct 2010 00:00:00 +0000</pubDate><guid>https://xizzhu.me/post/2010-10-28-hybrid-qml-qt/</guid><description>&lt;p>Though QML provides a nice way to design user interfaces, and JavaScript is employed there to implement the application logic and works pretty nice in many cases, we might still need Qt C++ in some situations (well, at least JavaScript has limited access outside its sandbox).&lt;/p></description></item><item><title>About Bible Reader</title><link>https://xizzhu.me/pages/about-joshua/</link><pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/pages/about-joshua/</guid><description>I created a Bible reader for Android. It is an open source project, under the Apache license.
The app is simple and easy-to-use, with minimalist design. It supports offline reading, multi-versions, full-text search, and many other features, while maintaining a small download and install size.
You can download the it from here. Recent changes are listed here. Feel free to request new features or report bugs here.
Donations If you would like to support this project, feel free to donate.</description></item><item><title>About</title><link>https://xizzhu.me/pages/about/</link><pubDate>Wed, 23 Jun 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/pages/about/</guid><description>Hi, my name is Xizhi Zhu, also known as Steven. I&amp;rsquo;m a Christian, husband, father, son, and somehow also a software engineer.
Some more I was born and brought up in China 🇨🇳. After college, I lived in Finland 🇫🇮 and the United States 🇺🇸. Currently, I&amp;rsquo;m living in Japan 🇯🇵.
Professionally, I&amp;rsquo;ve been a software engineer for over 10 years, with experiences in established and well-known companies, as well as fast-growing start-ups.</description></item><item><title>芬兰和美国</title><link>https://xizzhu.me/%E9%9A%8F%E7%AC%94/2021-04-13-%E8%8A%AC%E5%85%B0-%E7%BE%8E%E5%9B%BD-%E7%94%9F%E6%B4%BB/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://xizzhu.me/%E9%9A%8F%E7%AC%94/2021-04-13-%E8%8A%AC%E5%85%B0-%E7%BE%8E%E5%9B%BD-%E7%94%9F%E6%B4%BB/</guid><description>&lt;p>这几天正好和朋友聊到关于在美国生活和移民的问题，就干脆根据自己的生活经历，（相当主观的）聊聊芬兰和美国这两个国家吧。&lt;/p></description></item><item><title>Privacy Policy</title><link>https://xizzhu.me/pages/privacy-policy/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><guid>https://xizzhu.me/pages/privacy-policy/</guid><description>We collect, store, and use your information in connection with our products and services according to this Privacy Policy.
By using our products or services*, you signify the acceptance of this Privacy Policy.
We will not, under any circumstances, give out or sell your personal information to any third parties, nor do we store any information about your usage of our products or services other than to analyze and optimize our products and services.</description></item><item><title>圣经旧约的编排</title><link>https://xizzhu.me/%E9%9A%8F%E7%AC%94/2018-11-05-%E6%97%A7%E7%BA%A6-%E5%B8%8C%E4%BC%AF%E6%9D%A5%E5%9C%A3%E7%BB%8F/</link><pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate><guid>https://xizzhu.me/%E9%9A%8F%E7%AC%94/2018-11-05-%E6%97%A7%E7%BA%A6-%E5%B8%8C%E4%BC%AF%E6%9D%A5%E5%9C%A3%E7%BB%8F/</guid><description>&lt;p>圣经的旧约部分，和希伯来圣经的内容一致，但在编排顺序上有所不同。了解希伯来圣经的编排，有助于我们更好的解读旧约。&lt;/p></description></item><item><title>有信仰的孩子，真的就更自私吗？</title><link>https://xizzhu.me/%E9%9A%8F%E7%AC%94/2015-11-08-%E4%BF%A1%E4%BB%B0-%E8%87%AA%E7%A7%81/</link><pubDate>Sun, 08 Nov 2015 00:00:00 +0000</pubDate><guid>https://xizzhu.me/%E9%9A%8F%E7%AC%94/2015-11-08-%E4%BF%A1%E4%BB%B0-%E8%87%AA%E7%A7%81/</guid><description>&lt;p>英国&lt;a href="https://www.theguardian.com/world/2015/nov/06/religious-children-less-altruistic-secular-kids-study">卫报&lt;/a>引用一项研究称，和没有信仰的无神论孩子相比，有宗教信仰的孩子们更加自私。这好像和我们的认知恰好相反，难道说，宗教信仰真是有害的吗？让我们看一看这项研究的数据先。&lt;/p></description></item></channel></rss>