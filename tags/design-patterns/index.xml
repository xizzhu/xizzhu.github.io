<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>design patterns on Xizhi's Blog</title><link>https://xizzhu.me/tags/design-patterns/</link><description>Recent content in design patterns on Xizhi's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Jun 2021 00:00:00 -0500</lastBuildDate><atom:link href="https://xizzhu.me/tags/design-patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>Model-View-Intent Design Pattern on Android</title><link>https://xizzhu.me/post/2021-06-21-android-mvi-kotlin-coroutines-flow-compose/</link><pubDate>Mon, 21 Jun 2021 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2021-06-21-android-mvi-kotlin-coroutines-flow-compose/</guid><description>&lt;p>Model-View-Intent (MVI) is one of the latest design patterns for Android, which relies heavily on reactive and &lt;a href="https://xizzhu.me/post/2021-02-17-programming-paradigms-structured-object-oriented-functional/">functional programming&lt;/a>.&lt;/p></description></item><item><title>Design Patterns in Kotlin: Behavioral Patterns</title><link>https://xizzhu.me/post/2020-05-02-design-patterns-kotlin-behavioral-patterns/</link><pubDate>Sat, 02 May 2020 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2020-05-02-design-patterns-kotlin-behavioral-patterns/</guid><description>&lt;p>Gang of Four&amp;rsquo;s Behavioral Patterns describe the way of &lt;strong>communications between objects&lt;/strong>.&lt;/p></description></item><item><title>Design Patterns in Kotlin: Structural Patterns</title><link>https://xizzhu.me/post/2020-04-27-design-patterns-kotlin-structural-patterns/</link><pubDate>Mon, 27 Apr 2020 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2020-04-27-design-patterns-kotlin-structural-patterns/</guid><description>&lt;p>Gang of Four&amp;rsquo;s Structural Patterns describe the way of &lt;strong>composing classes and objects to form larger structures&lt;/strong>.&lt;/p></description></item><item><title>Design Patterns in Kotlin: Creational Patterns</title><link>https://xizzhu.me/post/2020-04-25-design-patterns-kotlin-creational-patterns/</link><pubDate>Sat, 25 Apr 2020 00:00:00 -0500</pubDate><guid>https://xizzhu.me/post/2020-04-25-design-patterns-kotlin-creational-patterns/</guid><description>&lt;p>Gang of Four&amp;rsquo;s Creational Patterns describe the way of &lt;strong>creating and initializing objects&lt;/strong>.&lt;/p></description></item></channel></rss>